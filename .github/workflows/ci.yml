name: CI
on: push
env:
  GO_VERSION: '1.19'
jobs:
  statistics:
    name: Statistics
    runs-on: ubuntu-latest
    env:
      TARGET: klog/
      TEST_FILE_PATTERN: .*_test\.go
      IMAGE_NAME: aldanial/cloc:1.90
    steps:
      - uses: actions/checkout@v2
      - name: Prepare tooling
        run: docker pull "${IMAGE_NAME}"
      - name: LOC of source files
        run: docker run --rm -v $(pwd):/wdir:ro -w /wdir "${IMAGE_NAME}" --not-match-f="${TEST_FILE_PATTERN}" "${TARGET}"
      - name: LOC of test files
        run: docker run --rm -v $(pwd):/wdir:ro -w /wdir "${IMAGE_NAME}" --match-f="${TEST_FILE_PATTERN}" "${TARGET}"
  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: |
          source ./run.sh && run::build
          mv out/klog /usr/local/bin/klog
      - name: Run benchmark
        run: cd .github/ && ./benchmark.sh
  format:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check format
        run: |
          source ./run.sh
          dirty_files="$(run::format)"
          if [[ "${dirty_files}" != "" ]]; then $(exit 1); fi
      - name: Run vet
        run: go vet ./...
      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Print info about environment
        run: go version
      - name: Install dependencies
        run: source ./run.sh && run::install
      - name: Run unit tests
        run: source ./run.sh && run::test
